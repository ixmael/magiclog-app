paths:
  /dashboard/products:
    get:
      summary: List my products
      description: List all the products registered by me as an user
      security:
        - UserAuth: []
      tags:
        - users
      responses:
        200:
          description: The list of my products
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    type: object
                    properties:
                      products:
                        type: array
                        items:
                          $ref: "#/components/schemas/UserProduct"
                        description: The list of the filtered products
        5XX:
          description: An error occured in the restapi
    post:
      summary: Create a new product
      description: Add a new product to my list of products
      security:
        - UserAuth: []
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  required: true
                  type: string
                  example: admin@magiclog.com
                password:
                  required: true
                  type: string
                  example: ThisIsAPassword
      responses:
        201:
          description: The product was created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The product was created
                  payload:
                    type: object
                    properties:
                      products:
                        type: array
                        items:
                          $ref: "#/components/schemas/UserProduct"
                        description: My list of the products
        404:
          description: You are not authorized
        5XX:
          description: An error occured during the fetching the products list
  /products:
    get:
      summary: Get the products list
      description: List and filter the products registered
      parameters:
        - in: path
          name: sku
          schema:
            type: string
          required: false
          description: The products have to match with the sku
        - in: path
          name: name
          schema:
            type: string
          required: false
          description: The products have to match with the name
        - in: path
          name: minPrice
          schema:
            type: number
          required: false
          description: The products have cost more or equal to minPrice
        - in: path
          name: maxPrice
          schema:
            type: number
          required: false
          description: The products have cost less or equal to maxPrice
      tags:
        - clients
      responses:
        200:
          description: The filtered products
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    type: object
                    properties:
                      products:
                        type: array
                        items:
                          $ref: "#/components/schemas/PublicProduct"
                        description: The list of the filtered products
        5XX:
          description: An error occured in the restapi
  /users:
    post:
      summary: Register a new user
      description: Send the data to create a new user
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  required: true
                  type: string
                  example: email@magiclog.com
                password:
                  required: true
                  type: string
                  example: ThisIsAPassword
                passwordToMatch:
                  required: true
                  type: string
                  example: ThisIsAPassword
      responses:
        201:
          description: The user was created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The user with the email 'email@magiclog.com' was created
        400:
          description: The request data is empty, the email was registered or the password not match
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The json data is not valid
        5XX:
          description: An error occured during the creation of the new user
  /users/login:
    post:
      summary: Login user
      description: Send the data to login into the app
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  required: true
                  type: string
                  example: email@magiclog.com
                password:
                  required: true
                  type: string
                  example: ThisIsAPassword
      responses:
        200:
          description: The user was logged
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    type: object
                    properties:
                      token:
                        type: string
                        description: The token to login in the request
                        example: eyJhbGc...RWhn7YP4e7Y
        404:
          description: The user failed on login
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The password is invalid
        5XX:
          description: An error occured during the user authentication
  /admin/login:
    post:
      summary: Login manager
      description: Send the data to login as manager into the app
      tags:
        - managers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  required: true
                  type: string
                  example: admin@magiclog.com
                password:
                  required: true
                  type: string
                  example: ThisIsAPassword
      responses:
        200:
          description: The user was logged
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    type: object
                    properties:
                      token:
                        type: string
                        description: The token to login in the request
                        example: eyJhbGc...RWhn7YP4e7Y
        404:
          description: The user failed on login
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The password is invalid
        5XX:
          description: An error occured during the user authentication

  /admin/products:
    get:
      summary: Get the products list
      description: List and filter the products registered
      security:
        - ManagerAuth: []
      parameters:
        - in: path
          seller:
          schema:
            type: string
          required: false
          description: The products have to match with the seller
      tags:
        - managers
      responses:
        200:
          description: The filtered products
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    type: object
                    properties:
                      products:
                        type: array
                        items:
                          $ref: '#/components/schemas/UserProduct'
                        description: The list of the filtered products
        5XX:
          description: An error occured in the restapi

components:
  securitySchemes:
    ManagerAuth:
      type: http
      scheme: bearer
    UserAuth:
      type: http
      scheme: bearer
  schemas:
    User:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          description: The email of the user
        password:
          type: string
          description: The password of the user
    PublicProduct:
      type: object
      required:
        - id
        - name
        - sku
        - price
      properties:
        id:
          type: string
          description: The id of the product
        name:
          type: string
          description: The name of the product
        sku:
          type: string
          description: The sku of the product
        price:
          type: number
          description: The price of the product
      example:
        id: eb805c00-e244-4f7b-821a-d86b8ad8cf5a
        name: Product A
        sku: ABCD12345
        price: 200.5
    UserProduct:
      type: object
      required:
        - id
        - name
        - sku
        - price
        - createdAt
        - user
      properties:
        id:
          type: string
          description: The id of the product
        name:
          type: string
          description: The name of the product
        sku:
          type: string
          description: The sku of the product
        price:
          type: number
          description: The price of the product
        user:
          type: string
          description: The price of the product
        createdAt:
          type: number
          description: The date (timestamp) of creation
      example:
        id: eb805c00-e244-4f7b-821a-d86b8ad8cf5a
        user: c0497df5-8014-4931-a4f3-b4c8fb0de122
        name: Product A
        sku: ABCD12345
        price: 200.5
        createdAt: 1690737578308
